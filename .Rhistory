ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
ggplot() +
geom_map(
data = world, map = world,
aes(map_id = region)
)
ggplot() +
geom_map(
data = world, map = world,
aes(map_id = region)
)
ggplot() +
geom_map(
data = world, map = world,
aes(map_id = region)
)
ggplot() +
geom_map(
data = world, map = world,
aes(lon, lat,map_id = region)
)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat,map_id = region)
)
?energySIM
?energyVIZ
library(abmR)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat,map_id = region)
)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat,map_id = region)
)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat,map_id = region)
)
library(abmR)
?energyVIZ
pop1 <- as.species(x=-98.7, y=34.7)
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,label=TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,label=TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,label=TRUE)
rlang::last_error()
myplot <- ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE)
myplot <- ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE)
myplot <- ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE)
library(ggplot2)
myplot <- ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE)
myplot
View(EX1)
EX1[["results"]]
ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE) + geom_path(EX1, aes(x=lon, y=lat,group=agent_id))
ggplot() + geom_path(EX1, aes(x=lon, y=lat,group=agent_id))
ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE) + geom_path(EX1$results, aes(x=lon, y=lat,group=agent_id))
dat <- EX1$results
ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE) + geom_path(dat, aes(x=lon, y=lat,group=agent_id))
ggplot() + geom_path(dat, aes(x=lon, y=lat,group=agent_id))
ggplot() + geom_path(dat, mapping=aes(x=lon, y=lat,group=agent_id))
ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE) + geom_path(dat, mapping=aes(x=lon, y=lat,group=agent_id))
library(abmR)
?energyVIZ
pop1 <- as.species(x=-98.7, y=34.7)
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=TRUE)
ggplot() + geom_map(data = world, map = world,
aes(long, lat,map_id = region)) +
coord_sf(xlim =c(-100,-80),
ylim = c(30,40),
expand = FALSE) + geom_path(dat, mapping=aes(x=lon, y=lat,group=agent_id))
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=999, dest_y=999, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=TRUE)
library(abmR)
?energyVIZ
pop1 <- as.species(x=-98.7, y=34.7)
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=TRUE)
?energyVIZ
library(abmR)
?energyVIZ
pop1 <- as.species(x=-98.7, y=34.7)
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=FALSE)
pop1 <- as.species(x=-98.7, y=34.7)
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=999, dest_y=999, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=FALSE)
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=TRUE)
?energyVIZ
energyVIZ(EX1,type="summary_table")
?moveVIZ
library(abmR)
?moveVIZ
pop1 <- as.species(x=-100, y=55)
EX2=moveSIM(replicates=2,days=5,env_rast=ex_raster, search_radius=550,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.8, mot_y=.8,
modeled_species=pop1,optimum=.6, n_failures=5, fail_thresh=.40,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
pop1 <- as.species(x=-100, y=55)
EX2=moveSIM(replicates=2,days=5,env_rast=ex_raster, search_radius=550,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.8, mot_y=.8,
modeled_species=pop1,optimum=.6, n_failures=5, fail_thresh=.40,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
moveVIZ(EX2,title="Visualizing MoveSIM results",type="plot")
library(abmR)
?moveVIZ
?moveVIZ
d
?moveVIZ
pop1 <- as.species(x=-100, y=55)
EX2=moveSIM(replicates=2,days=5,env_rast=ex_raster, search_radius=550,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.8, mot_y=.8,
modeled_species=pop1,optimum=.6, n_failures=5, fail_thresh=.40,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
moveVIZ(EX2,title="Visualizing MoveSIM results",type="plot")
pop1 <- as.species(x=-100, y=55)
EX2=moveSIM(replicates=2,days=5,env_rast=ex_raster, search_radius=550,
sigma=.1, dest_x=999, dest_y=999, mot_x=.8, mot_y=.8,
modeled_species=pop1,optimum=.6, n_failures=5, fail_thresh=.40,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
moveVIZ(EX2,title="Visualizing MoveSIM results",type="plot")
pop1 <- as.species(x=-100, y=55)
EX2=moveSIM(replicates=2,days=5,env_rast=ex_raster, search_radius=550,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.8, mot_y=.8,
modeled_species=pop1,optimum=.6, n_failures=5, fail_thresh=.40,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
moveVIZ(EX2,title="Visualizing MoveSIM results",type="plot")
my.df = EX1$results
my.sf.point = my.df
my_vector=!is.na(my.df$x)
my.sf.point <- my.sf.point[my_vector,]
my.sf.point$energy = NULL
my.sf.point$day = NULL
my.sf.point$agent_id = NULL
my.sf.point$distance = NULL
my.df$X = NULL
my.df=na.omit(my.df)
View(my.df)
my.df = EX1$results
my.df
?map_data
world <- map_data("world")
library(abmR)
?aes_string
library(abmR)
?energyVIZ
pop1 <- as.species(x=-98.7, y=34.7)
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
# 2. Run energyVIZ() on your result
energyVIZ(EX1,title="Visualizing EnergySIM results",type="plot", aspect_ratio=5/3,
label=TRUE)
my.df = EX1$results
my.sf.point = my.df
my_vector=!is.na(my.df$lon)
my.sf.point <- my.sf.point[my_vector,]
my.sf.point$energy = NULL
my.sf.point$day = NULL
my.sf.point$agent_id = NULL
my.sf.point$distance = NULL
my.df$X = NULL
my.df=na.omit(my.df)
#------------------------------------------------
# First Energy interpolation (Basic POINT Plot)
my.sf.point <- st_as_sf(x = my.df,
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
library(sf)
library(rgeos)
#------------------------------------------------
# First Energy interpolation (Basic POINT Plot)
my.sf.point <- st_as_sf(x = my.df,
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
my.sp.point <- as(my.sf.point, "Spatial")
#------------------------------------------------
# First Energy interpolation (Basic POINT Plot)
my.sf.point <- st_as_sf(x = my.df,
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
#------------------------------------------------
# First Energy interpolation (Basic POINT Plot)
my.sf.point <- st_as_sf(x = my.df,
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
EX1$results
my.df = EX1$results
my.sf.point = my.df
my_vector=!is.na(my.df$x)
my.sf.point <- my.sf.point[my_vector,]
my.sf.point$energy = NULL
my.sf.point$day = NULL
my.sf.point$agent_id = NULL
my.sf.point$distance = NULL
my.df$X = NULL
my.df=na.omit(my.df)
#------------------------------------------------
# First Energy interpolation (Basic POINT Plot)
my.sf.point <- st_as_sf(x = my.df,
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
my.sp.point <- as(my.sf.point, "Spatial")
energyVIZ
energyVIZ(EX1, type="gradient")
?energyVIZ
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="R",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="S",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
my.df = EX1$results
my.sf.point = my.df
my_vector=!is.na(my.df$x)
my.sf.point <- my.sf.point[my_vector,]
my.sf.point$energy = NULL
my.sf.point$day = NULL
my.sf.point$agent_id = NULL
my.sf.point$distance = NULL
my.df$X = NULL
my.df=na.omit(my.df)
#------------------------------------------------
# First Energy interpolation (Basic POINT Plot)
my.sf.point <- st_as_sf(x = my.df,
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
my.sp.point <- as(my.sf.point, "Spatial")
#############################################
# reducing the extent of that huge NOAM shp
# over a target area (doing this manually for now)
# but maybe the function will need to use the input raster?
#----------------------------------------------
world.redu <- st_crop(world, extent(c(my_xlim[1],my_xlim[2],my_ylim[1],my_ylim[2])), snap="out")
#=============================================
# plotting energy +/-
grd <- as.data.frame(spsample(my.sp.point, "regular", n=50000))
names(grd) <- c("X", "Y")
coordinates(grd) <- c("X", "Y")
gridded(grd) <- TRUE
fullgrid(grd) <- TRUE
proj4string(grd) <- proj4string(my.sp.point)
P.idw <- gstat::idw(delta_energy ~ 1, my.sp.point, newdata=grd, idp=2.0)
r <- raster(P.idw)
?tm_shape
my_plot=tm_raster(n=10,palette = "RdBu", midpoint = NA,
title="energy") +
tm_shape(my.sp.point) + tm_dots(size=0.01, alpha=0.1) +
tm_legend(legend.outside=T)
library(tm_shape)
library(tmap)
my_plot=tm_raster(n=10,palette = "RdBu", midpoint = NA,
title="energy") +
tm_shape(my.sp.point) + tm_dots(size=0.01, alpha=0.1) +
tm_legend(legend.outside=T)
myplot
my_plot
tm_raster(n=10,palette = "RdBu", midpoint = NA,
title="energy")
tm_shape(my.sp.point)
tm_shape(my.sp.point) + tm_raster(n=10,palette = "RdBu", midpoint = NA,
title="energy")
world <- ne_countries(scale = "medium", returnclass = "sf")
library(rnaturalearth)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
View(world)
world <- map_data("world")
class(world)
as_Spatial(world)
?tm_shape
SpatialPointsDataFrame(world)
#
as.data.frame(P.idw)
ggplot() +
geom_tile(data=test, aes(x=x, y=y, fill=value), alpha=0.8)
#
test <- as.data.frame(P.idw)
View(test)
ggplot() +
geom_tile(data=test, aes(x=x, y=y, fill=var1.pred), alpha=0.8)
ggplot() +
geom_tile(data=test, aes(x=X, y=Y, fill=var1.pred), alpha=0.8)
plot(P.idw)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
world <- map_data("world")
st_as_sf(world)
world
projcrs <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
df <- st_as_sf(x = df,
coords = c("long", "lat"),
crs = projcrs)
df <- st_as_sf(x = world,
coords = c("long", "lat"),
crs = projcrs)
class(df)
world <- st_as_sf(x = world,
coords = c("long", "lat"),
crs = projcrs)
#world <- ne_countries(scale = "medium", returnclass = "sf")
start.p <- cbind(data$results[1,3], data$results[1,4])
world=map_data("world")
projcrs <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
world <- st_as_sf(x = world,
coords = c("long", "lat"),
crs = projcrs)
EX1=energySIM(replicates=2,days=7,env_rast=ex_raster, search_radius=200,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pop1,
optimum_lo=.8,optimum_hi=.9,init_energy=100,
direction="S",write_results=FALSE,single_rast=TRUE,mortality = TRUE)
my.df = EX1$results
my.sf.point = my.df
my_vector=!is.na(my.df$x)
my.sf.point <- my.sf.point[my_vector,]
my.sf.point$energy = NULL
my.sf.point$day = NULL
my.sf.point$agent_id = NULL
my.sf.point$distance = NULL
my.df$X = NULL
my.df=na.omit(my.df)
#------------------------------------------------
# First Energy interpolation (Basic POINT Plot)
my.sf.point <- st_as_sf(x = my.df,
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
my.sp.point <- as(my.sf.point, "Spatial")
#############################################
# reducing the extent of that huge NOAM shp
# over a target area (doing this manually for now)
# but maybe the function will need to use the input raster?
#----------------------------------------------
world.redu <- st_crop(world, extent(c(my_xlim[1],my_xlim[2],my_ylim[1],my_ylim[2])), snap="out")
library(raster)
#############################################
# reducing the extent of that huge NOAM shp
# over a target area (doing this manually for now)
# but maybe the function will need to use the input raster?
#----------------------------------------------
world.redu <- st_crop(world, extent(c(my_xlim[1],my_xlim[2],my_ylim[1],my_ylim[2])), snap="out")
?energyVIZ
my_xlim=c(-140,-100)
my_ylim=c(20,40)
#############################################
# reducing the extent of that huge NOAM shp
# over a target area (doing this manually for now)
# but maybe the function will need to use the input raster?
#----------------------------------------------
world.redu <- st_crop(world, extent(c(my_xlim[1],my_xlim[2],my_ylim[1],my_ylim[2])), snap="out")
#=============================================
# plotting energy +/-
grd <- as.data.frame(spsample(my.sp.point, "regular", n=50000))
names(grd) <- c("X", "Y")
coordinates(grd) <- c("X", "Y")
gridded(grd) <- TRUE
fullgrid(grd) <- TRUE
proj4string(grd) <- proj4string(my.sp.point)
P.idw <- gstat::idw(delta_energy ~ 1, my.sp.point, newdata=grd, idp=2.0)
r <- raster(P.idw)
r.m <- mask(r, world.redu)
my_plot=tm_shape(r.m) +
tm_raster(n=10,palette = "RdBu", midpoint = NA,
title="energy") +
tm_shape(my.sp.point) + tm_dots(size=0.01, alpha=0.1) +
tm_legend(legend.outside=T)
my_plot
tm_shape(r.m)
tm_shape(r.m)+tm_raster(n=10,palette = "RdBu", midpoint = NA,
title="energy")
plot(P.idw)
plot(r.m)
plot(r)
View(r)
r
r.m <- r
my_plot=tm_shape(r.m) +
tm_raster(n=10,palette = "RdBu", midpoint = NA,
title="energy") +
tm_shape(my.sp.point) + tm_dots(size=0.01, alpha=0.1) +
tm_legend(legend.outside=T)
my_plot
world.redu
?mask
plot(world)
plot(world.redu)
r
plot(r)
r$var1.pred
ggplot() + geom_map(data = world.redu, map = world.rdu,
aes_string("long", "lat",map_id = "region")) +
geom_tile(data=r, mappings=aes(fill=factor(r$var1.pred),alpha=0.8))
ggplot() + geom_map(data = world.redu, map = world.redu,
aes_string("long", "lat",map_id = "region")) +
geom_tile(data=r, mappings=aes(fill=factor(r$var1.pred),alpha=0.8))
View(r)
r=as.data.frame(r)
r$X
View(r)
rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")
ininstall.packages("NCmisc")
install.packages("NCmisc")
library(NCmisc)
p <- list.functions.in.file()
p <- list.functions.in.file("energyVIZ.R")
getwd()
p <- list.functions.in.file("/R/energyVIZ.R")
p <- list.functions.in.file("~/R/energyVIZ.R")
cd("/R")
setwd("/Users/BGOCHANOUR/Documents/Github/move-model/R")
p <- list.functions.in.file("energyVIZ.R")
p
library(raster)
library(sp)
library(ggplot2)
library(rgeos)
library(rnaturalearth)
p <- list.functions.in.file("energyVIZ.R")
p
library(abmR)
?write.csv
dependencies()
renv::dependencies()
library(purrr)
?walk
library(abmR)
library(abmR)
